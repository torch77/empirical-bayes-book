#### Beta Binomial Regression - Chapter 7
- we have ignored the fact that there is a relationship between AB's and batting avgerage - batters are given more AB's if they are better
	- the issue here is that our prior mean we're shrinking towards is too high for low AB players (who aren't as good) and too low for high AB players (who are good)
	- figure 7.2 shows this in the difference between the raw and "shrunk" posterior BA's
		- players w/ a low AB are brought up a ton (up to the prior mean) b/c there is little evidence for them, while players with a high AB stay where they are (compared to prior mean) b/c they have a lot of evidence for them
		- as a result, we're overestimating lower AB players

- Accounting for AB in the model
	- have been modelling as a generative process - https://en.wikipedia.org/wiki/Generative_model
	- Specifically, 
		- pi ~ Beta(a0, B0)
		- Hi ~ Binom(ABi, pi)
	- can re-parametrize beta dist as:
		- pi ~ Beta(u0/sig0, (1-u0)/sig0) where
			- u0 is the mean batting average and controls location of prior
			- sig0 is std. dev and = 1/(a+b) and controls dispersion of prior
	- since we want to move a player's prior to account for their number of AB we want to include AB as a linear term in u for each prior
		- ui = u0 + uAB*log(AB) where uAB is a coef to be estimated
		- a0,i = ui/sig0
		- B0,i = (1-ui)/sig0
		- pi ~ Beta(a0,i, B0,i)
		- Hi ~ Binom(ABi, pi)
			- we could also frame this in a logistic function to keep ui from ranging outside of the 0-1 range 
	- the above framing is called a beta binomial regression
		- we're allowing the expected value of the beta to be influence by characteristics about the player
	- Fitting the model
		- we have to fit three parameters: u0, uAB, sig0
		- fit using gamlss package: syntax for formula is still a bit strange to me
		- receive estimates of the three parameters
		- plotting some example priors shows that as AB increases so does u0 
		- retrieve fitted u0 and sig0 params for each player and use them to calculate a0 and B0 so we can easily create a new posterior
		- comparing our estimates from the non-regression model we see that we are not longer overestimating players w/ a small number of ABs
		- we are in effect shrinking towards a trend now rather than the mean
		- we are accounting for AB over a player's career as evidence for them being better or worse (based on BA) so this model wouldn't be good for rookies


#### Empirical Bayesian Hierarchical Modeling - Chapter 7
- From wikipedia: Hierarchical modeling is used when information is available on several different levels of observational units.
	- in this case we know whether or not a batter (unit) is left or right handed
- accounting for AB was also creating a hierarchical model b/c the prior is not fixed for all players but varies w/ latent variables

- Accounting for handedness
	- left-handed and right-handed players differ in BA slightly so we should include that
		- we can simply include handedness linearly in the model so now:
			- ui = u0 + uAB*log(AB) + uHAND*Handedness where uAB and uHAND are coefs to be estimated
			- a0,i = ui/sig0
			- B0,i = (1-ui)/sig0
			- pi ~ Beta(a0,i, B0,i)
			- Hi ~ Binom(ABi, pi)

- Accouting for time when player was active
	- we shouldn't expect players from the 1800's to be the same as 1950's to be the same as now
	- if we look at the mean batting average by decade we see a non-linear wave like trend representing changes in the game (p 70)
	- since we see a non-linear trend we shouldn't include the term as a linear one. Instead we can use the ns function to fit a cubic spline to the wave like form of the trend.
	- so we now have:
		- ui = u0 + uAB*log(AB) + uHAND*Handedness + uNS*NS(year, df = 5) where uAB and uHAND are coefs to be estimated and uNS is a vector of 5 coefs to be estimated (one for each df of the spline)
		- a0,i = ui/sig0
		- B0,i = (1-ui)/sig0
		- pi ~ Beta(a0,i, B0,i)
		- Hi ~ Binom(ABi, pi)

- Additional terms
	- we also include an interaction term between handedness and year to see how handedness has changed over time. 

- Getting posteriors
	- to get a posterior for existing data we can use the fitted fx to extract the fitted mu/sigmas for each player and update them w/ each player's results
	- we can use the predict fx on new data and follow the same steps
	- In the new dataframe on page 72, the model depends on every column to produce it's estimate of mu and sigma. I blieve the reason you still want to compute the posterior i 

- Hyperparameters
	- there is uncertainty in our hyperparameters (a0, b0, coefs) that we have been ignoring
	- this is about as complex of a model as you should fit w/ this approach